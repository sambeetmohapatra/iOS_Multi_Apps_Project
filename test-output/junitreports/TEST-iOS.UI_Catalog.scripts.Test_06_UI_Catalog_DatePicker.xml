<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="iOS.UI_Catalog.scripts.Test_06_UI_Catalog_DatePicker" tests="1" time="38.877" ignored="36" failures="0" timestamp="26 Aug 2018 09:04:28 GMT" skipped="0" hostname="Sambeets-MacBook-Air.local" errors="1">
  <testcase name="test_06_UI_Catalog_DatePicker" time="38.877" classname="iOS.UI_Catalog.scripts.Test_06_UI_Catalog_DatePicker">
    <error type="org.openqa.selenium.NoSuchElementException" message="An element could not be located on the page using the given search parameters. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 33.19 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &#039;2.53.1&#039;, revision: &#039;a36b8b1cd5757287168e54b817830adce9b0158d&#039;, time: &#039;2016-06-30 19:26:09&#039;
System info: host: &#039;Sambeets-MacBook-Air.local&#039;, ip: &#039;192.168.1.3&#039;, os.name: &#039;Mac OS X&#039;, os.arch: &#039;x86_64&#039;, os.version: &#039;10.13.2&#039;, java.version: &#039;1.8.0_131&#039;
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities [{networkConnectionEnabled=false, noReset=true, bundleId=com.example.apple-samplecode.UICatalog, databaseEnabled=false, deviceName=iPhone 7, platform=MAC, platformVersion=10.3, webStorageEnabled=false, locationContextEnabled=false, browserName=, takesScreenshot=true, javascriptEnabled=true, platformName=iOS, udid=702C4E08-F609-4476-BE92-F21EECE76F33}]
Session ID: 138284c1-5b3b-49a2-ba1e-8546f5e9b7cd
*** Element info: {Using=xpath, value=//XCUIElementTypeStaticText[contains(@name,&#039;2017&#039;)]}">
      <![CDATA[org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 33.19 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Sambeets-MacBook-Air.local', ip: '192.168.1.3', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.2', java.version: '1.8.0_131'
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities [{networkConnectionEnabled=false, noReset=true, bundleId=com.example.apple-samplecode.UICatalog, databaseEnabled=false, deviceName=iPhone 7, platform=MAC, platformVersion=10.3, webStorageEnabled=false, locationContextEnabled=false, browserName=, takesScreenshot=true, javascriptEnabled=true, platformName=iOS, udid=702C4E08-F609-4476-BE92-F21EECE76F33}]
Session ID: 138284c1-5b3b-49a2-ba1e-8546f5e9b7cd
*** Element info: {Using=xpath, value=//XCUIElementTypeStaticText[contains(@name,'2017')]}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:56)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:500)
	at io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:134)
	at io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)
	at io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)
	at iOS.POMLibrary.Get_WebElement_JSON.getElementByXpath(Get_WebElement_JSON.java:37)
	at iOS.UI_Catalog.scripts.Test_06_UI_Catalog_DatePicker.test_06_UI_Catalog_DatePicker(Test_06_UI_Catalog_DatePicker.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1289)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- test_06_UI_Catalog_DatePicker -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="after_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- after_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
  <testcase name="before_Suite" classname="iOS.BaseClass.Base_Class">
    <skipped/>
  </testcase> <!-- before_Suite -->
</testsuite> <!-- iOS.UI_Catalog.scripts.Test_06_UI_Catalog_DatePicker -->
